

class Layer{
=================== Array of features ==================
Aofind --->  (input)
Aof1d = (128 elements/feature channels, every elmenent = 256x256)
Aof2d = white

Aofinu = blue
Aof1u
Aof2u
================== Array of kernels ===================
Aok1d = (128 elements/kernels, every element = 3x3x64)
Aok2d = (128 elements/kernels, every element = 3x3x128)
Aok1u = (128 elements/kernels, every element = 3x3x256)
Aok2u = (128 elements/kernels, every element = 3x3x128)
Aok_uc (empty for firstlayr) = (64 elements/kernels, every element = 3x3x128)
============================
1 Errortensor per feature channel
(6 errortensor arrs per layer)
and maybe more...
============================
(pad conv and ReLU)
(pad the input first, then conv, apply ReLU, write to output)
conv(double* ker, double* feat, bool overwrite=False){}
conv(Aok1d, Aofind) (depth of every kernel in Aok1d is equal to number of input channels/features) --> (overwrite Aof1d)
conv(Aok2u, Aof1u) ---> (overwrite Aof2u){
for  
=============================
avgpool(&L2.Aofind){
overwrite L2.Aofind
}
==============================
upconv(&L1.Aofinu){
overwrite L1.Aofinu
}
=============================
int main(){

Layer layers=[L1, L2, .., L5]

readimage into layers[0].Aofind;

for (int i=0; i<4; ++i){
layers[i].conv(layers[i].Aok1d, layers[i].Aofind);
layers[i].conv(layers[i].Aok2d, layers[i].Aof1d);
layers[i].avgpool(layers[i+1].Aofind);
}
layers[4].conv(layers[4].Aok1d, layers[4].Aofind);
layers[4].conv(layers[4].Aok2d, layers[4].Aof1d);

for (int i=3; i>=0; --i){
layers[i+1].upconv(layers[i].Aofinu)
layers[i].conv(layers[i].Aok1u, layers[i].Aofinu);
layers[i].conv(layers[i].Aok1u, layers[i].Aof2d, 1);
layers[i].conv(layers[i].Aok2u, layers[i].Aof1u);
}




L1.avgpool(L2.Aofind)
conv(Aok1d, Aofind) ---> overwrites to Aof1d
conv(Aok2d, Aof1d) ----> overwrites to Aof2d
move to lower layers and come back up
conv(Aok1u, Aofinu) ---(Aofinu is blue)--> overwrites Aof1u
conv(Aok1u, Aof2d, 1) ---(Aof2d is white)--> adds to current Aof1u
conv(Aok2u, Aof1u) ---> overwrites to Aof2u
L2.upconv(L1.Aofinu)


arkadi42




